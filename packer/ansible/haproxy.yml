---
- name: Install HAProxy
  become: true
  dnf:
    name: "{{ item }}"
    state: present
    update_cache: yes
  loop:
    - haproxy

- name: Add custom HAProxy configuration
  copy:
    dest: /etc/haproxy/haproxy.cfg
    content: |
      #---------------------------------------------------------------------
      # Global settings
      #---------------------------------------------------------------------
      global
          # to have these messages end up in /var/log/haproxy.log you will
          # need to:
          #
          # 1) configure syslog to accept network log events.  This is done
          #    by adding the '-r' option to the SYSLOGD_OPTIONS in
          #    /etc/sysconfig/syslog
          #
          # 2) configure local2 events to go to the /var/log/haproxy.log
          #   file. A line like the following can be added to
          #   /etc/sysconfig/syslog
          #
          #    local2.*                       /var/log/haproxy.log
          #
          log         127.0.0.1 local2
      
          chroot      /var/lib/haproxy
          pidfile     /var/run/haproxy.pid
          maxconn     4000
          user        haproxy
          group       haproxy
          daemon
      
          # turn on stats unix socket
          stats socket /var/lib/haproxy/stats
      
          # utilize system-wide crypto-policies
          ssl-default-bind-ciphers PROFILE=SYSTEM
          ssl-default-server-ciphers PROFILE=SYSTEM
      
      #---------------------------------------------------------------------
      # common defaults that all the 'listen' and 'backend' sections will
      # use if not designated in their block
      #---------------------------------------------------------------------
      defaults
          mode                    http
          log                     global
          option                  httplog
          option                  dontlognull
          option http-server-close
          option forwardfor       except 127.0.0.0/8
          option                  redispatch
          retries                 3
          timeout http-request    10s
          timeout queue           1m
          timeout connect         10s
          timeout client          1m
          timeout server          1m
          timeout http-keep-alive 10s
          timeout check           10s
          maxconn                 3000     

      frontend stats
        bind *:8404
        stats enable
        stats uri /stats
        stats refresh 10s
        stats admin if LOCALHOST
    owner: haproxy
    group: haproxy
    mode: 0644

- name: Open the firewall for HAProxy stats
  firewalld:
    port: 8404/tcp
    state: enabled
    permanent: true

- name: Turn on haproxy_connect_any
  seboolean:
    name: haproxy_connect_any
    state: yes
    persistent: yes

- name: Run HAProxy
  systemd:
    name: haproxy
    state: started
    enabled: true

